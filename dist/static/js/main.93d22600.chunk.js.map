{"version":3,"sources":["images/background.jfif","constants/colors.js","constants/styles.js","components/ContactList/index.js","actions/index.js","components/Chat/Header/index.js","components/Chat/MessageList/index.js","components/Chat/MessageInput/index.js","constants/images.js","components/Chat/index.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js","logo.svg"],"names":["module","exports","Color_Theme","toUpperCaseFirst","s","toUpperCase","slice","colors","transparent","info","success","danger","warning","dark","white","light","gray","combineStyles","arr","style","i","length","fontRegular","fontSize","fontBold","fontWeight","Object","keys","reduce","styles","key","color","backgroundColor","text_color","value","border","borderRightWidth","borderLeftWidth","borderTopWidth","borderBottomWidth","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","flex","textAlign","ContactList","props","selectConversation","conversation","handleInput","e","setState","search","target","matchesSearch","item","state","RegExp","toLowerCase","test","name","Card","elevation","width","height","overflow","scrollbarColor","this","Dark_Mode","scrollbarWidth","overflowX","display","flexDirection","alignItems","borderBottom","borderColor","maxHeight","maxWidth","borderRadius","margin","src","user","image","justifyContent","onClick","switchDarkMode","b1","m2","p2","id","onChange","multiline","list","map","textOverflow","padding","lastMessage","unreadMessages","alignSelf","Component","connect","store","reducer","contacts","dispatch","console","log","type","payload","Header","bb1","isOnline","faker","date","past","toLocaleTimeString","selectedConversation","MessageList","lorem","words","Date","now","updateScroll","element","document","getElementById","scrollTop","scrollHeight","isImage","msg","overflowY","messages","Paper","sender","borderTopLeftRadius","borderTopRightRadius","b0","message","MessageInput","images","Math","floor","random","push","avatar","minWidth","getImages","handleSend","addMessage","timeStamp","im","openGallery","prevProps","selected","ChatList","App","m0","require","position","zIndex","findName","Boolean","window","location","hostname","match","createChat","contact","parse","createContacts","initialState","combineReducers","action","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.93d22600.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.1188941f.jfif\";","export const Dark_Color = true;\r\nexport const Color_Theme = \"rgba(29, 34, 38,0.8)\";\r\nexport const Button_Color = \"rgb(148, 149, 154)\";\r\nexport const Dark_Mode = false;\r\n","import { Dark_Mode, Color_Theme } from \"./colors\";\r\n\r\nconst toUpperCaseFirst = (s) => {\r\n  return s[0].toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const space = 5;\r\nexport const colors = {\r\n  transparent: \"transparent\",\r\n  //  primary: Platform.OS === \"ios\" ? \"#007aff\" : \"#3f51b5\",\r\n  //  secondary: Platform.OS === \"ios\" ? \"#0076e6\" : \"#36469b\",\r\n  info: \"#62B1F6\",\r\n  success: \"#5cb85c\",\r\n  danger: \"#d9534f\",\r\n  warning: \"#f0ad4e\",\r\n  dark: \"#000000\",\r\n  white: \"#ffffff\",\r\n  light: \"#f4f4f4\",\r\n  gray: \"#e1e1e1\",\r\n};\r\n\r\nexport const combineStyles = (arr) => {\r\n  let style = {};\r\n  for (var i = 0; i < arr.length; i++) {\r\n    style = { ...style, ...arr[i] };\r\n  }\r\n  return style;\r\n};\r\n\r\nexport default {\r\n  /* Font */\r\n  fontRegular: {\r\n    fontSize: 16,\r\n  },\r\n  fontBold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  /* Colors */\r\n  ...Object.keys(colors).reduce(\r\n    (styles, key) => ({\r\n      ...styles,\r\n      [key]: { color: colors[key] },\r\n      [`bg${toUpperCaseFirst(key)}`]: { backgroundColor: colors[key] },\r\n    }),\r\n    {}\r\n  ),\r\n  text_color: Dark_Mode ? \"rgb(211, 211, 211)\" : \"#ffffff\",\r\n  backgroundColor: Dark_Mode ? Color_Theme : \"rgba(233, 242, 246,0.9)\",\r\n  /* Border, Margin, Padding, Flex */\r\n\r\n  ...[0, 1, 2, 3, 4, 5].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n\r\n      [`b${value}`]: {\r\n        //borderTopWidth: value,\r\n        //borderRightWidth: value,\r\n        //borderBottomWidth: value,\r\n        //borderLeftWidth: value,\r\n        border: `solid black ${value}px`,\r\n      },\r\n      [`bx${value}`]: {\r\n        borderRightWidth: value,\r\n        borderLeftWidth: value,\r\n      },\r\n      [`by${value}`]: {\r\n        borderTopWidth: value,\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bt${value}`]: {\r\n        borderTopWidth: value,\r\n      },\r\n      [`br${value}`]: {\r\n        borderRightWidth: value,\r\n      },\r\n      [`bb${value}`]: {\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bl${value}`]: {\r\n        borderLeftWidth: value,\r\n      },\r\n\r\n      [`m${value}`]: {\r\n        marginTop: value * space,\r\n        marginRight: value * space,\r\n        marginBottom: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`mx${value}`]: {\r\n        marginRight: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`my${value}`]: {\r\n        marginTop: value * space,\r\n        marginBottom: value * space,\r\n      },\r\n      [`mt${value}`]: {\r\n        marginTop: value * space,\r\n      },\r\n      [`mr${value}`]: {\r\n        marginRight: value * space,\r\n      },\r\n      [`mb${value}`]: {\r\n        marginBottom: value * space,\r\n      },\r\n      [`ml${value}`]: {\r\n        marginLeft: value * space,\r\n      },\r\n\r\n      [`p${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingRight: value * space,\r\n        paddingBottom: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`px${value}`]: {\r\n        paddingRight: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`py${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pt${value}`]: {\r\n        paddingTop: value * space,\r\n      },\r\n      [`pr${value}`]: {\r\n        paddingRight: value * space,\r\n      },\r\n      [`pb${value}`]: {\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pl${value}`]: {\r\n        paddingLeft: value * space,\r\n      },\r\n\r\n      [`flex${value}`]: { flex: value },\r\n    }),\r\n    {}\r\n  ),\r\n\r\n  /* Text */\r\n  ...[\"left\", \"center\", \"right\", \"justify\"].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n      [`text${toUpperCaseFirst(value)}`]: { textAlign: value },\r\n    }),\r\n    {}\r\n  ),\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Color_Theme, Dark_Color } from \"../../constants/colors\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport s, { combineStyles } from \"../../constants/styles\";\r\nimport faker, { fake } from \"faker\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectConversation, switchDarkMode } from \"../../actions\";\r\n\r\nclass ContactList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n    };\r\n  }\r\n  selectConversation = (conversation) => {\r\n    this.props.selectConversation(conversation);\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n  matchesSearch = (item) => {\r\n    const { search } = this.state;\r\n    if (search == \"\") return true;\r\n    const reg = new RegExp(\"(\" + search.toLowerCase() + \")+\");\r\n    return reg.test(item.name.toLowerCase()) ? true : false;\r\n  };\r\n  render() {\r\n    return (\r\n      <Card\r\n        elevation={10}\r\n        style={{\r\n          width: \"25%\",\r\n          height: \"100%\",\r\n          //borderRight: \"solid black 1px\",\r\n          overflow: \"scroll\",\r\n          scrollbarColor: this.props.Dark_Mode\r\n            ? \"rgb(80, 99, 107)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n          scrollbarWidth: \"thin\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? \"rgba(10, 15, 15,0.8)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n          overflowX: \"hidden\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"solid  0.1px\",\r\n            borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"7vh\",\r\n                height: \"7vh\",\r\n                maxHeight: 50,\r\n                maxWidth: 50,\r\n                borderRadius: \"50%\",\r\n                margin: 10,\r\n                //  marginRight: 20,\r\n              }}\r\n              src={this.props.user.image}\r\n            />\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"flex-end\",\r\n                display: \"flex\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <div onClick={this.props.switchDarkMode}>\r\n                <MoreVert\r\n                  style={{\r\n                    color: this.props.Dark_Mode ? \"grey\" : \"white\",\r\n                    fontSize: 30,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Card\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                height: \"2vh\",\r\n                borderRadius: 10,\r\n                width: \"80%\",\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n                borderColor: this.props.Dark_Mode\r\n                  ? \"grey\"\r\n                  : \"rgb(84, 177, 210)\",\r\n                display: \"flex\",\r\n                alignItems: \"centers\",\r\n              },\r\n            ])}\r\n          >\r\n            <input\r\n              id=\"input\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                height: \"2vh\",\r\n                width: \"100%\",\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                fontSize: \"2.5vh\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n        </div>\r\n        {this.props.list &&\r\n          this.props.list.map((item) => {\r\n            if (!this.matchesSearch(item)) return null;\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  borderBottom: \"solid  0.1px\",\r\n                  borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                }}\r\n                onClick={() => {\r\n                  this.selectConversation(item);\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    width: \"75%\",\r\n                    height: \"75%\",\r\n                    maxHeight: 75,\r\n                    maxWidth: 75,\r\n                    borderRadius: \"50%\",\r\n                    margin: 10,\r\n                    //  marginRight: 20,\r\n                  }}\r\n                  src={item.image}\r\n                />\r\n                <div\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    textOverflow: \"ellipsis\",\r\n                    padding: 10,\r\n                    //  border: \"solid black 1px\",\r\n                    justifyContent: \"center\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    //  alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      color: \"rgb(230, 230, 230)\",\r\n                      fontSize: \"2.2vh\",\r\n                      marginBottom: 10,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      color: s.text_color,\r\n                      width: \"100%\",\r\n                      overflow: \"hidden\",\r\n                      textOverflow: \"ellipsis\",\r\n                      fontSize: \"2vh\",\r\n                    }}\r\n                  >\r\n                    {item.lastMessage}\r\n                  </div>\r\n                </div>\r\n                {item.unreadMessages.length > 0 && (\r\n                  <div\r\n                    style={{\r\n                      alignSelf: \"flex-end\",\r\n                      margin: 10,\r\n                      marginLeft: \"auto\",\r\n                      color: \"white\",\r\n                      backgroundColor: this.props.Dark_Mode\r\n                        ? \"rgb(65, 65, 65)\"\r\n                        : \"rgba(84, 177, 210)\",\r\n                      padding: 5,\r\n                      borderRadius: 1000,\r\n                      height: 20,\r\n                      width: 20,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {item.unreadMessages.length}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    list: store.reducer.contacts,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n    user: store.reducer.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectConversation, switchDarkMode })(\r\n  ContactList\r\n);\r\n","export const selectConversation = (item) => (dispatch) => {\r\n  console.log(item);\r\n  dispatch({\r\n    type: \"SELECT_CONVERSATION\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const addMessage = (item) => (dispatch) => {\r\n  console.log(\"New Message\", item);\r\n  dispatch({\r\n    type: \"ADD_MESSAGE\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const switchDarkMode = () => (dispatch) => {\r\n  console.log(\"Switching Theme\");\r\n  dispatch({\r\n    type: \"SWITCH_DARK_MODE\",\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Call from \"@material-ui/icons/Call\";\r\nimport styles, { combineStyles } from \"../../../constants/styles\";\r\nimport { Card, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport faker from \"faker\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Card\r\n        elevation={10}\r\n        style={{\r\n          height: \"12%\",\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n          borderRadius: 0,\r\n          ...styles.bb1,\r\n          borderColor: \"grey\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"10%\",\r\n            alignItems: \"center\",\r\n            //  justifyContent: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              width: \"7vh\",\r\n              height: \"7vh\",\r\n              borderRadius: \"90%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n              //margin: 10,\r\n              //  marginRight: 20,\r\n            }}\r\n            src={this.props.image}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            marginLeft: 10,\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontSize: \"2.5vh\",\r\n              fontWeight: \"bold\",\r\n              color: this.props.Dark_Mode\r\n                ? styles.text_color\r\n                : \"rgb(60, 80, 90)\",\r\n            }}\r\n          >\r\n            {this.props.name}\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: \"2vh\",\r\n              color: this.props.Dark_Mode ? styles.text_color : \"#61b7d5\",\r\n            }}\r\n          >\r\n            {this.props.isOnline\r\n              ? \"Online\"\r\n              : \"Last seen on \" + faker.date.past().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              styles.m2,\r\n            ])}\r\n          >\r\n            <Call\r\n              //fontSize=\"large\"\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 25,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    name: store.reducer.selectedConversation.name,\r\n    isOnline: store.reducer.selectedConversation.isOnline,\r\n    image: store.reducer.selectedConversation.image,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Header);\r\n","import React, { Component } from \"react\";\r\nimport s, { combineStyles } from \"../../../constants/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport faker from \"faker\";\r\nimport { connect } from \"react-redux\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\n\r\nconst messages = [\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Astitva\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Astitva\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Astitva\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Astitva\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Astitva\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n  {\r\n    message: faker.lorem.words(),\r\n    sender: \"Swastik\",\r\n    timestamp: Date.now(),\r\n  },\r\n];\r\nclass MessageList extends Component {\r\n  updateScroll = () => {\r\n    var element = document.getElementById(\"messageList\");\r\n    element.scrollTop = element.scrollHeight;\r\n  };\r\n  componentDidMount() {\r\n    this.updateScroll();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateScroll();\r\n  }\r\n  isImage = (msg) => {\r\n    console.log(\"msg\", msg);\r\n    if (msg.length < 3) return false;\r\n    if (msg.slice(msg.length - 3) == \"jpg\") return true;\r\n    else return false;\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"messageList\"\r\n        style={{\r\n          flex: 1,\r\n          overflowY: \"scroll\",\r\n          scrollbarColor: \"grey\",\r\n          scrollbarWidth: \"thin\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {this.props.messages.map((item) => {\r\n          return (\r\n            <div\r\n              style={combineStyles([\r\n                //s.p2,\r\n                s.m2,\r\n                { display: \"flex\", flexDirection: \"column\" },\r\n                //s.b1,\r\n              ])}\r\n            >\r\n              <Paper\r\n                elevation={1}\r\n                style={combineStyles([\r\n                  {\r\n                    alignSelf:\r\n                      item.sender == this.props.user.name\r\n                        ? \"flex-end\"\r\n                        : \"flex-start\",\r\n                    borderRadius: 10,\r\n                    borderTopLeftRadius:\r\n                      item.sender == this.props.user.name ? 10 : 0,\r\n                    borderTopRightRadius:\r\n                      item.sender == this.props.user.name ? 0 : 10,\r\n                    fontSize: \"2.3vh\",\r\n                    color:\r\n                      item.sender != this.props.user.name\r\n                        ? this.props.Dark_Mode\r\n                          ? \"rgb(230, 230, 230)\"\r\n                          : \"rgb(120, 140, 160)\"\r\n                        : this.props.Dark_Mode\r\n                        ? \"rgb(144, 144, 146)\"\r\n                        : \"#ffffff\",\r\n                    backgroundColor:\r\n                      item.sender != this.props.user.name\r\n                        ? this.props.Dark_Mode\r\n                          ? \"rgb(65, 65, 65,0.6)\"\r\n                          : \"#ffffff\"\r\n                        : this.props.Dark_Mode\r\n                        ? \"rgba(34, 34, 34,0.6)\"\r\n                        : \"rgb(97, 183, 213)\",\r\n                  },\r\n                  s.b0,\r\n                  s.p2,\r\n                ])}\r\n              >\r\n                {this.isImage(item.message) ? (\r\n                  <img\r\n                    src={item.message}\r\n                    style={{ height: \"20vh\", width: \"20vw\" }}\r\n                  />\r\n                ) : (\r\n                  item.message\r\n                )}\r\n              </Paper>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"messages\", store.reducer.selectedConversation);\r\n  return {\r\n    user: store.reducer.user,\r\n    messages: store.reducer.selectedConversation.messages,\r\n\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {})(MessageList);\r\n","import React, { Component } from \"react\";\r\nimport s, { combineStyles } from \"../../../constants/styles\";\r\nimport { TextField, Card } from \"@material-ui/core\";\r\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport { Button_Color, Color_Theme } from \"../../../constants/colors\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../../actions\";\r\nimport { image, random } from \"faker\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { gallery } from \"../../../constants/images\";\r\nclass MessageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      openGallery: false,\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ message: e.target.value });\r\n    //document.getElementById(\"demo\").innerHTML = \"You wrote: \" + x;\r\n  };\r\n  handleSend = (msg) => {\r\n    console.log(this.state.message);\r\n    //send message\r\n    this.props.addMessage({\r\n      message: typeof msg != \"object\" ? msg : this.state.message,\r\n      sender: this.props.user.name,\r\n      timeStamp: Date.now(),\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selected.name != prevProps.selected.name) {\r\n      this.setState({ message: \"\" });\r\n      document.getElementById(\"message\").value = \"\";\r\n    }\r\n  }\r\n  getImages = () => {\r\n    let images = [];\r\n    for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n      const im = image.avatar();\r\n      images.push(\r\n        <img\r\n          onClick={() => {\r\n            this.handleSend(im);\r\n            this.setState({ openGallery: !this.state.openGallery });\r\n          }}\r\n          src={im}\r\n          style={{ flex: 1, height: \"10vh\", minWidth: 100 }}\r\n        />\r\n      );\r\n    }\r\n    return images;\r\n  };\r\n  render() {\r\n    const { message, openGallery } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          height: openGallery ? 200 : null,\r\n          width: \"100%\",\r\n          overflowY: openGallery ? \"scroll\" : \"hidden\",\r\n\r\n          scrollbarColor: \"grey\",\r\n          scrollbarWidth: \"thin\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: this.props.Dark_Mode\r\n              ? Color_Theme\r\n              : \"rgba(233, 242, 246,0.9)\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {/*<div\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <InsertEmoticon\r\n              //fontSize=\"large\"\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>*/}\r\n          <Card\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                borderRadius: 10,\r\n                width: \"80%\",\r\n                flex: 1,\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n                borderColor: \"grey\",\r\n              },\r\n            ])}\r\n          >\r\n            <textarea\r\n              id=\"message\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                height: \"3vh\",\r\n                width: \"100%\",\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                fontSize: \"2.5vh\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n          {/*<AttachFile\r\n          fontSize=\"large\"\r\n          style={combineStyles([s.m2, { color: \"grey\" }])}\r\n        />*/}\r\n          {/*<div>\r\n          <Send\r\n            fontSize=\"large\"\r\n            style={combineStyles([s.m2, { color: \"grey\" }])}\r\n          />\r\n        </div>*/}\r\n\r\n          <div\r\n            onClick={() => {\r\n              this.setState({ openGallery: !this.state.openGallery });\r\n            }}\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <AttachFile\r\n              //fontSize=\"large\"\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n          <div\r\n            onClick={this.handleSend}\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <Send\r\n              //fontSize=\"large\"\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n        </div>\r\n        {openGallery && (\r\n          <div\r\n            id=\"messageList\"\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              backgroundColor: this.props.Dark_Mode\r\n                ? Color_Theme\r\n                : \"rgba(233, 242, 246,0.9)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {this.getImages()}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    user: store.reducer.user,\r\n    selected: store.reducer.selectedConversation,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageInput);\r\n","import React from \"react\";\r\nimport { image } from \"faker\";\r\nconst getImages = () => {\r\n  let images = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    images.push(\r\n      <img\r\n        src={image.avatar()}\r\n        style={{ flex: 1, height: \"10vh\", minWidth: 100 }}\r\n      />\r\n    );\r\n  }\r\n  return images;\r\n};\r\nexport const gallery = getImages();\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport MessageList from \"./MessageList\";\r\nimport MessageInput from \"./MessageInput\";\r\n\r\nexport default class ChatList extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Header />\r\n        <MessageList />\r\n        <MessageInput />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ContactList from \"./components/ContactList\";\nimport Chat from \"./components/Chat\";\nimport s from \"./constants/styles\";\nimport faker from \"faker\";\nimport { Card } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        ...s.m0,\n        scrollbarColor: \"grey\",\n        scrollbarWidth: \"thin\",\n        overflowY: \"scroll\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        //overflowX: \"hidden\",\n        //border: \"solid black 1px\",\n      }}\n    >\n      <img\n        src={require(\"./images/background.jfif\")}\n        style={{\n          position: \"absolute\",\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      />\n      <Card\n        elevation={12}\n        style={{\n          zIndex: 1,\n          height: \"75%\",\n          width: \"75%\",\n          flexDirection: \"row\",\n          display: \"flex\",\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <ContactList\n          list={[\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n          ]}\n        />\n        <Chat />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import faker from \"faker\";\r\nimport { combineReducers } from \"redux\";\r\nconst user = { image: faker.image.avatar(), name: faker.name.findName() };\r\nconst createChat = (contact) => {\r\n  let messages = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    messages.push({\r\n      message: faker.lorem.words(),\r\n      sender: Math.floor(Math.random() * 2) ? contact : user.name,\r\n      timeStamp: Date.parse(faker.date.past()),\r\n    });\r\n  }\r\n  return messages;\r\n};\r\nconst createContacts = () => {\r\n  let contacts = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    const name = faker.name.findName();\r\n    const messages = createChat(name);\r\n    contacts.push({\r\n      name,\r\n      image: faker.image.avatar(),\r\n      lastMessage: faker.lorem.words(),\r\n      messages,\r\n      unreadMessages: messages.slice(\r\n        Math.floor(Math.random() * messages.length)\r\n      ),\r\n      isOnline: Math.floor(Math.random() * 2),\r\n    });\r\n  }\r\n  console.log(\"contacts\", contacts);\r\n  return contacts;\r\n};\r\n\r\nlet contacts = createContacts();\r\ncontacts[0].unreadMessages = [];\r\nconst initialState = {\r\n  contacts,\r\n  selectedConversation: contacts[0],\r\n  user,\r\n  Dark_Mode: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: action.payload,\r\n        contacts: state.contacts.map((item) => {\r\n          if (action.payload.name == item.name) {\r\n            return {\r\n              ...item,\r\n              unreadMessages: [],\r\n            };\r\n          } else if (state.selectedConversation.name == item.name) {\r\n            return { ...state.selectedConversation, unreadMessages: [] };\r\n          } else {\r\n            return item;\r\n          }\r\n        }),\r\n      };\r\n      break;\r\n    case \"ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: {\r\n          ...state.selectedConversation,\r\n          messages: [...state.selectedConversation.messages, action.payload],\r\n        },\r\n      };\r\n      break;\r\n    case \"SWITCH_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        Dark_Mode: !state.Dark_Mode,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({ reducer });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}