{"version":3,"sources":["images/background.jfif","constants/styles.js","components/ContactList/index.js","actions/index.js","constants/colors.js","components/Chat/Header/index.js","components/Chat/MessageList/index.js","components/Chat/MessageInput/index.js","components/Chat/index.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["module","exports","combineStyles","arr","style","i","length","fontRegular","fontSize","fontBold","fontWeight","reduce","styles","value","border","borderRightWidth","borderLeftWidth","borderTopWidth","borderBottomWidth","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","flex","s","toUpperCase","slice","textAlign","ContactList","props","selectConversation","conversation","handleInput","e","setState","search","target","matchesSearch","item","state","RegExp","toLowerCase","test","name","Card","id","elevation","scrollbarColor","this","Dark_Mode","backgroundColor","scrollBar","borderColor","src","user","image","onClick","switchDarkMode","color","b1","m2","p2","onChange","multiline","list","map","text_color","lastMessage","unreadMessages","Component","connect","store","reducer","contacts","dispatch","console","log","type","payload","Color_Theme","Header","bb1","isOnline","faker","date","past","toLocaleTimeString","selectedConversation","MessageList","updateScroll","element","document","getElementById","scrollTop","scrollHeight","isImage","msg","messages","Paper","alignSelf","sender","borderTopLeftRadius","borderTopRightRadius","message","height","width","MessageInput","handleSend","addMessage","timeStamp","Date","now","clearInput","getImages","images","im","avatar","push","openGallery","minWidth","Math","floor","random","prevProps","selected","overflowY","className","ChatList","display","flexDirection","App","m0","scrollbarWidth","justifyContent","alignItems","require","position","zIndex","findName","Boolean","window","location","hostname","match","createChat","contact","lorem","words","parse","createContacts","initialState","combineReducers","action","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b5107270.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.1188941f.jfif\";","const toUpperCaseFirst = (s) => {\r\n  return s[0].toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const space = 5;\r\n\r\nexport const combineStyles = (arr) => {\r\n  let style = {};\r\n  for (var i = 0; i < arr.length; i++) {\r\n    style = { ...style, ...arr[i] };\r\n  }\r\n  return style;\r\n};\r\n\r\nexport default {\r\n  /* Font */\r\n  fontRegular: {\r\n    fontSize: 16,\r\n  },\r\n  fontBold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  /* Border, Margin, Padding, Flex */\r\n\r\n  ...[0, 1, 2, 3, 4, 5].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n\r\n      [`b${value}`]: {\r\n        border: `solid black ${value}px`,\r\n      },\r\n      [`bx${value}`]: {\r\n        borderRightWidth: value,\r\n        borderLeftWidth: value,\r\n      },\r\n      [`by${value}`]: {\r\n        borderTopWidth: value,\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bt${value}`]: {\r\n        borderTopWidth: value,\r\n      },\r\n      [`br${value}`]: {\r\n        borderRightWidth: value,\r\n      },\r\n      [`bb${value}`]: {\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bl${value}`]: {\r\n        borderLeftWidth: value,\r\n      },\r\n\r\n      [`m${value}`]: {\r\n        marginTop: value * space,\r\n        marginRight: value * space,\r\n        marginBottom: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`mx${value}`]: {\r\n        marginRight: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`my${value}`]: {\r\n        marginTop: value * space,\r\n        marginBottom: value * space,\r\n      },\r\n      [`mt${value}`]: {\r\n        marginTop: value * space,\r\n      },\r\n      [`mr${value}`]: {\r\n        marginRight: value * space,\r\n      },\r\n      [`mb${value}`]: {\r\n        marginBottom: value * space,\r\n      },\r\n      [`ml${value}`]: {\r\n        marginLeft: value * space,\r\n      },\r\n\r\n      [`p${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingRight: value * space,\r\n        paddingBottom: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`px${value}`]: {\r\n        paddingRight: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`py${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pt${value}`]: {\r\n        paddingTop: value * space,\r\n      },\r\n      [`pr${value}`]: {\r\n        paddingRight: value * space,\r\n      },\r\n      [`pb${value}`]: {\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pl${value}`]: {\r\n        paddingLeft: value * space,\r\n      },\r\n\r\n      [`flex${value}`]: { flex: value },\r\n    }),\r\n    {}\r\n  ),\r\n\r\n  /* Text */\r\n  ...[\"left\", \"center\", \"right\", \"justify\"].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n      [`text${toUpperCaseFirst(value)}`]: { textAlign: value },\r\n    }),\r\n    {}\r\n  ),\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport s, { combineStyles } from \"../../constants/styles\";\r\nimport WbSunny from \"@material-ui/icons/WbSunny\";\r\nimport NightsStay from \"@material-ui/icons/NightsStay\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectConversation, switchDarkMode } from \"../../actions\";\r\nimport \"./index.css\";\r\nclass ContactList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n    };\r\n  }\r\n  selectConversation = (conversation) => {\r\n    this.props.selectConversation(conversation);\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n  matchesSearch = (item) => {\r\n    const { search } = this.state;\r\n    if (search == \"\") return true;\r\n    const reg = new RegExp(\"(\" + search.toLowerCase() + \")+\");\r\n    return reg.test(item.name.toLowerCase()) ? true : false;\r\n  };\r\n  render() {\r\n    return (\r\n      <Card\r\n        id=\"upper-container\"\r\n        elevation={10}\r\n        style={{\r\n          scrollbarColor: this.props.Dark_Mode\r\n            ? \"rgb(80, 99, 107)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? \"rgba(10, 15, 15,0.8)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n\r\n          ...s.scrollBar,\r\n        }}\r\n      >\r\n        <div\r\n          id=\"header-container\"\r\n          style={{\r\n            borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n          }}\r\n        >\r\n          <div id=\"upper-box\">\r\n            <img id=\"image\" src={this.props.user.image} />\r\n            <div id=\"icon-container\">\r\n              <div onClick={this.props.switchDarkMode}>\r\n                {!this.props.Dark_Mode ? (\r\n                  <WbSunny\r\n                    style={{\r\n                      color: this.props.Dark_Mode ? \"grey\" : \"white\",\r\n                      fontSize: 30,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <NightsStay\r\n                    style={{\r\n                      color: this.props.Dark_Mode ? \"grey\" : \"white\",\r\n                      fontSize: 30,\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Card\r\n            id=\"search-container\"\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n                borderColor: this.props.Dark_Mode\r\n                  ? \"grey\"\r\n                  : \"rgb(84, 177, 210)\",\r\n              },\r\n            ])}\r\n          >\r\n            <input\r\n              id=\"search-input\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n        </div>\r\n        {this.props.list &&\r\n          this.props.list.map((item) => {\r\n            if (!this.matchesSearch(item)) return null;\r\n            return (\r\n              <div\r\n                id=\"contact-container\"\r\n                style={{\r\n                  borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                }}\r\n                onClick={() => {\r\n                  this.selectConversation(item);\r\n                }}\r\n              >\r\n                <img id=\"contact-image\" style={{}} src={item.image} />\r\n                <div id=\"text-upper-container\">\r\n                  <div\r\n                    id=\"contact-name\"\r\n                    style={{\r\n                      flex: 1,\r\n                      color: \"rgb(230, 230, 230)\",\r\n                      fontSize: \"2.2vh\",\r\n                      marginBottom: 10,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                  <div\r\n                    id=\"last-message\"\r\n                    style={{\r\n                      color: this.props.Dark_Mode\r\n                        ? s.text_color\r\n                        : \"rgb(60, 80, 90)\",\r\n                    }}\r\n                  >\r\n                    {item.lastMessage}\r\n                  </div>\r\n                </div>\r\n                {item.unreadMessages.length > 0 && (\r\n                  <div\r\n                    id=\"unread-message\"\r\n                    style={{\r\n                      backgroundColor: this.props.Dark_Mode\r\n                        ? \"rgb(65, 65, 65)\"\r\n                        : \"rgba(84, 177, 210)\",\r\n                    }}\r\n                  >\r\n                    {item.unreadMessages.length}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    list: store.reducer.contacts,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n    user: store.reducer.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectConversation, switchDarkMode })(\r\n  ContactList\r\n);\r\n","export const selectConversation = (item) => (dispatch) => {\r\n  console.log(item);\r\n  dispatch({\r\n    type: \"SELECT_CONVERSATION\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const addMessage = (item) => (dispatch) => {\r\n  console.log(\"New Message\", item);\r\n  dispatch({\r\n    type: \"ADD_MESSAGE\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const switchDarkMode = () => (dispatch) => {\r\n  console.log(\"Switching Theme\");\r\n  dispatch({\r\n    type: \"SWITCH_DARK_MODE\",\r\n  });\r\n};\r\n","export const Color_Theme = \"rgba(29, 34, 38,0.8)\";\r\nexport const Button_Color = \"rgb(148, 149, 154)\";\r\n","import React, { Component } from \"react\";\r\nimport Call from \"@material-ui/icons/Call\";\r\nimport styles, { combineStyles } from \"../../../constants/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport faker from \"faker\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\nimport \"./index.css\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Card\r\n        id=\"Header-card\"\r\n        elevation={10}\r\n        style={{\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n          ...styles.bb1,\r\n        }}\r\n      >\r\n        <div id=\"image-container\">\r\n          <img id=\"contact-image\" src={this.props.image} />\r\n        </div>\r\n        <div id=\"text-upper-container\">\r\n          <div\r\n            id=\"name-holder\"\r\n            style={{\r\n              color: this.props.Dark_Mode\r\n                ? styles.text_color\r\n                : \"rgb(60, 80, 90)\",\r\n            }}\r\n          >\r\n            {this.props.name}\r\n          </div>\r\n          <div\r\n            id=\"status\"\r\n            style={{\r\n              color: this.props.Dark_Mode ? styles.text_color : \"#61b7d5\",\r\n            }}\r\n          >\r\n            {this.props.isOnline\r\n              ? \"Online\"\r\n              : \"Last seen at \" + faker.date.past().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          id=\"image-holder\"\r\n          style={combineStyles([\r\n            {\r\n              backgroundColor: this.props.Dark_Mode ? \"transparent\" : \"#61b7d5\",\r\n            },\r\n          ])}\r\n        >\r\n          <Call\r\n            style={combineStyles([\r\n              {\r\n                color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                fontSize: 25,\r\n              },\r\n            ])}\r\n          />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    name: store.reducer.selectedConversation.name,\r\n    isOnline: store.reducer.selectedConversation.isOnline,\r\n    image: store.reducer.selectedConversation.image,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Header);\r\n","import React, { Component } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\nimport \"./index.css\";\r\nclass MessageList extends Component {\r\n  updateScroll = () => {\r\n    var element = document.getElementById(\"messageList\");\r\n    element.scrollTop = element.scrollHeight;\r\n  };\r\n  componentDidMount() {\r\n    this.updateScroll();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateScroll();\r\n  }\r\n  isImage = (msg) => {\r\n    console.log(\"msg\", msg);\r\n    if (msg.length < 3) return false;\r\n    if (msg.slice(msg.length - 3) == \"jpg\") return true;\r\n    else return false;\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"messageList\"\r\n        style={{\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n        }}\r\n      >\r\n        {this.props.messages.map((item) => {\r\n          return (\r\n            <div id=\"message-container\">\r\n              <Paper\r\n                elevation={1}\r\n                id=\"message-paper\"\r\n                style={{\r\n                  alignSelf:\r\n                    item.sender == this.props.user.name\r\n                      ? \"flex-end\"\r\n                      : \"flex-start\",\r\n                  borderTopLeftRadius:\r\n                    item.sender == this.props.user.name ? 10 : 0,\r\n                  borderTopRightRadius:\r\n                    item.sender == this.props.user.name ? 0 : 10,\r\n                  color:\r\n                    item.sender != this.props.user.name\r\n                      ? this.props.Dark_Mode\r\n                        ? \"rgb(230, 230, 230)\"\r\n                        : \"rgb(120, 140, 160)\"\r\n                      : this.props.Dark_Mode\r\n                      ? \"rgb(144, 144, 146)\"\r\n                      : \"#ffffff\",\r\n                  backgroundColor:\r\n                    item.sender != this.props.user.name\r\n                      ? this.props.Dark_Mode\r\n                        ? \"rgb(65, 65, 65,0.6)\"\r\n                        : \"#ffffff\"\r\n                      : this.props.Dark_Mode\r\n                      ? \"rgba(34, 34, 34,0.6)\"\r\n                      : \"rgb(97, 183, 213)\",\r\n                }}\r\n              >\r\n                {this.isImage(item.message) ? (\r\n                  <img\r\n                    src={item.message}\r\n                    style={{ height: \"20vh\", width: \"20vw\" }}\r\n                  />\r\n                ) : (\r\n                  item.message\r\n                )}\r\n              </Paper>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"messages\", store.reducer.selectedConversation);\r\n  return {\r\n    user: store.reducer.user,\r\n    messages: store.reducer.selectedConversation.messages,\r\n\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {})(MessageList);\r\n","import React, { Component } from \"react\";\r\nimport s, { combineStyles } from \"../../../constants/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../../actions\";\r\nimport { image } from \"faker\";\r\nimport \"./index.css\";\r\nclass MessageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      openGallery: false,\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ message: e.target.value });\r\n  };\r\n  handleSend = (msg) => {\r\n    console.log(this.state.message);\r\n\r\n    this.props.addMessage({\r\n      message: typeof msg != \"object\" ? msg : this.state.message,\r\n      sender: this.props.user.name,\r\n      timeStamp: Date.now(),\r\n    });\r\n    this.clearInput();\r\n  };\r\n  clearInput = () => {\r\n    this.setState({ message: \"\" });\r\n    document.getElementById(\"message\").value = \"\";\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selected.name != prevProps.selected.name) {\r\n      this.clearInput();\r\n    }\r\n  }\r\n  getImages = () => {\r\n    let images = [];\r\n    for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n      const im = image.avatar();\r\n      images.push(\r\n        <img\r\n          onClick={() => {\r\n            this.handleSend(im);\r\n            this.setState({ openGallery: !this.state.openGallery });\r\n          }}\r\n          src={im}\r\n          style={{ flex: 1, height: \"10vh\", minWidth: 100 }}\r\n        />\r\n      );\r\n    }\r\n    return images;\r\n  };\r\n  render() {\r\n    const { openGallery } = this.state;\r\n    return (\r\n      <div\r\n        id=\"input-upper-container\"\r\n        style={{\r\n          height: openGallery ? \"30vh\" : null,\r\n\r\n          overflowY: openGallery ? \"scroll\" : \"hidden\",\r\n        }}\r\n      >\r\n        <div\r\n          id=\"input-inner-container\"\r\n          style={{\r\n            backgroundColor: this.props.Dark_Mode\r\n              ? Color_Theme\r\n              : \"rgba(233, 242, 246,0.9)\",\r\n          }}\r\n        >\r\n          {/*<div\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <InsertEmoticon\r\n              \r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>*/}\r\n          <Card\r\n            id=\"input-card\"\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n              },\r\n            ])}\r\n          >\r\n            <textarea\r\n              id=\"message\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n\r\n          <div\r\n            onClick={() => {\r\n              this.setState({ openGallery: !this.state.openGallery });\r\n            }}\r\n            className=\"icon-container\"\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <AttachFile\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"icon-container\"\r\n            onClick={this.handleSend}\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <Send\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n        </div>\r\n        {openGallery && (\r\n          <div\r\n            id=\"gallery-container\"\r\n            style={{\r\n              backgroundColor: this.props.Dark_Mode\r\n                ? Color_Theme\r\n                : \"rgba(233, 242, 246,0.9)\",\r\n            }}\r\n          >\r\n            {this.getImages()}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    user: store.reducer.user,\r\n    selected: store.reducer.selectedConversation,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageInput);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport MessageList from \"./MessageList\";\r\nimport MessageInput from \"./MessageInput\";\r\n\r\nexport default class ChatList extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Header />\r\n        <MessageList />\r\n        <MessageInput />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ContactList from \"./components/ContactList\";\nimport Chat from \"./components/Chat\";\nimport s from \"./constants/styles\";\nimport faker from \"faker\";\nimport { Card } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        ...s.m0,\n        scrollbarColor: \"grey\",\n        scrollbarWidth: \"thin\",\n        overflowY: \"scroll\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        //overflowX: \"hidden\",\n        //border: \"solid black 1px\",\n      }}\n    >\n      <img\n        src={require(\"./images/background.jfif\")}\n        style={{\n          position: \"absolute\",\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      />\n      <Card\n        elevation={12}\n        style={{\n          zIndex: 1,\n          height: \"75%\",\n          width: \"75%\",\n          flexDirection: \"row\",\n          display: \"flex\",\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <ContactList\n          list={[\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n          ]}\n        />\n        <Chat />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import faker from \"faker\";\r\nimport { combineReducers } from \"redux\";\r\nconst user = { image: faker.image.avatar(), name: faker.name.findName() };\r\nconst createChat = (contact) => {\r\n  let messages = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    messages.push({\r\n      message: faker.lorem.words(),\r\n      sender: Math.floor(Math.random() * 2) ? contact : user.name,\r\n      timeStamp: Date.parse(faker.date.past()),\r\n    });\r\n  }\r\n  return messages;\r\n};\r\nconst createContacts = () => {\r\n  let contacts = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    const name = faker.name.findName();\r\n    const messages = createChat(name);\r\n    contacts.push({\r\n      name,\r\n      image: faker.image.avatar(),\r\n      lastMessage: faker.lorem.words(),\r\n      messages,\r\n      unreadMessages: messages.slice(\r\n        Math.floor(Math.random() * messages.length)\r\n      ),\r\n      isOnline: Math.floor(Math.random() * 2),\r\n    });\r\n  }\r\n  console.log(\"contacts\", contacts);\r\n  return contacts;\r\n};\r\n\r\nlet contacts = createContacts();\r\ncontacts[0].unreadMessages = [];\r\nconst initialState = {\r\n  contacts,\r\n  selectedConversation: contacts[0],\r\n  user,\r\n  Dark_Mode: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: action.payload,\r\n        contacts: state.contacts.map((item) => {\r\n          if (action.payload.name == item.name) {\r\n            return {\r\n              ...item,\r\n              unreadMessages: [],\r\n            };\r\n          } else if (state.selectedConversation.name == item.name) {\r\n            return { ...state.selectedConversation, unreadMessages: [] };\r\n          } else {\r\n            return item;\r\n          }\r\n        }),\r\n      };\r\n      break;\r\n    case \"ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: {\r\n          ...state.selectedConversation,\r\n          messages: [...state.selectedConversation.messages, action.payload],\r\n        },\r\n      };\r\n      break;\r\n    case \"SWITCH_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        Dark_Mode: !state.Dark_Mode,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({ reducer });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}