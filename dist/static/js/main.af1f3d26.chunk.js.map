{"version":3,"sources":["images/background.jfif","constants/styles.js","components/ContactList/index.js","actions/index.js","constants/colors.js","components/Chat/Header/index.js","components/Chat/MessageList/index.js","components/Chat/MessageInput/index.js","components/Chat/index.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["module","exports","toUpperCaseFirst","s","toUpperCase","slice","colors","transparent","info","success","danger","warning","dark","white","light","gray","combineStyles","arr","style","i","length","fontRegular","fontSize","fontBold","fontWeight","Object","keys","reduce","styles","key","color","backgroundColor","value","border","borderRightWidth","borderLeftWidth","borderTopWidth","borderBottomWidth","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","flex","textAlign","ContactList","props","selectConversation","conversation","handleInput","e","setState","search","target","matchesSearch","item","state","RegExp","toLowerCase","test","name","Card","elevation","width","height","overflow","scrollbarColor","this","Dark_Mode","scrollbarWidth","overflowX","scrollBar","display","flexDirection","alignItems","borderBottom","borderColor","maxHeight","maxWidth","borderRadius","margin","src","user","image","justifyContent","onClick","switchDarkMode","b1","m2","p2","id","onChange","outline","multiline","list","map","textOverflow","padding","text_color","lastMessage","unreadMessages","alignSelf","Component","connect","store","reducer","contacts","dispatch","console","log","type","payload","Color_Theme","Header","bb1","isOnline","faker","date","past","toLocaleTimeString","selectedConversation","MessageList","updateScroll","element","document","getElementById","scrollTop","scrollHeight","isImage","msg","overflowY","messages","Paper","sender","borderTopLeftRadius","borderTopRightRadius","b0","message","MessageInput","handleSend","addMessage","timeStamp","Date","now","clearInput","getImages","images","im","avatar","push","openGallery","minWidth","Math","floor","random","prevProps","selected","ChatList","App","m0","require","position","zIndex","findName","Boolean","window","location","hostname","match","createChat","contact","lorem","words","parse","createContacts","initialState","combineReducers","action","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.af1f3d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.1188941f.jfif\";","const toUpperCaseFirst = (s) => {\r\n  return s[0].toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const space = 5;\r\nexport const colors = {\r\n  transparent: \"transparent\",\r\n\r\n  info: \"#62B1F6\",\r\n  success: \"#5cb85c\",\r\n  danger: \"#d9534f\",\r\n  warning: \"#f0ad4e\",\r\n  dark: \"#000000\",\r\n  white: \"#ffffff\",\r\n  light: \"#f4f4f4\",\r\n  gray: \"#e1e1e1\",\r\n};\r\n\r\nexport const combineStyles = (arr) => {\r\n  let style = {};\r\n  for (var i = 0; i < arr.length; i++) {\r\n    style = { ...style, ...arr[i] };\r\n  }\r\n  return style;\r\n};\r\n\r\nexport default {\r\n  /* Font */\r\n  fontRegular: {\r\n    fontSize: 16,\r\n  },\r\n  fontBold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  /* Colors */\r\n  ...Object.keys(colors).reduce(\r\n    (styles, key) => ({\r\n      ...styles,\r\n      [key]: { color: colors[key] },\r\n      [`bg${toUpperCaseFirst(key)}`]: { backgroundColor: colors[key] },\r\n    }),\r\n    {}\r\n  ),\r\n  //text_color: Dark_Mode ? \"rgb(211, 211, 211)\" : \"#ffffff\",\r\n  //backgroundColor: Dark_Mode ? Color_Theme : \"rgba(233, 242, 246,0.9)\",\r\n  /* Border, Margin, Padding, Flex */\r\n\r\n  ...[0, 1, 2, 3, 4, 5].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n\r\n      [`b${value}`]: {\r\n        border: `solid black ${value}px`,\r\n      },\r\n      [`bx${value}`]: {\r\n        borderRightWidth: value,\r\n        borderLeftWidth: value,\r\n      },\r\n      [`by${value}`]: {\r\n        borderTopWidth: value,\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bt${value}`]: {\r\n        borderTopWidth: value,\r\n      },\r\n      [`br${value}`]: {\r\n        borderRightWidth: value,\r\n      },\r\n      [`bb${value}`]: {\r\n        borderBottomWidth: value,\r\n      },\r\n      [`bl${value}`]: {\r\n        borderLeftWidth: value,\r\n      },\r\n\r\n      [`m${value}`]: {\r\n        marginTop: value * space,\r\n        marginRight: value * space,\r\n        marginBottom: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`mx${value}`]: {\r\n        marginRight: value * space,\r\n        marginLeft: value * space,\r\n      },\r\n      [`my${value}`]: {\r\n        marginTop: value * space,\r\n        marginBottom: value * space,\r\n      },\r\n      [`mt${value}`]: {\r\n        marginTop: value * space,\r\n      },\r\n      [`mr${value}`]: {\r\n        marginRight: value * space,\r\n      },\r\n      [`mb${value}`]: {\r\n        marginBottom: value * space,\r\n      },\r\n      [`ml${value}`]: {\r\n        marginLeft: value * space,\r\n      },\r\n\r\n      [`p${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingRight: value * space,\r\n        paddingBottom: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`px${value}`]: {\r\n        paddingRight: value * space,\r\n        paddingLeft: value * space,\r\n      },\r\n      [`py${value}`]: {\r\n        paddingTop: value * space,\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pt${value}`]: {\r\n        paddingTop: value * space,\r\n      },\r\n      [`pr${value}`]: {\r\n        paddingRight: value * space,\r\n      },\r\n      [`pb${value}`]: {\r\n        paddingBottom: value * space,\r\n      },\r\n      [`pl${value}`]: {\r\n        paddingLeft: value * space,\r\n      },\r\n\r\n      [`flex${value}`]: { flex: value },\r\n    }),\r\n    {}\r\n  ),\r\n\r\n  /* Text */\r\n  ...[\"left\", \"center\", \"right\", \"justify\"].reduce(\r\n    (styles, value) => ({\r\n      ...styles,\r\n      [`text${toUpperCaseFirst(value)}`]: { textAlign: value },\r\n    }),\r\n    {}\r\n  ),\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport s, { combineStyles } from \"../../constants/styles\";\r\nimport WbSunny from \"@material-ui/icons/WbSunny\";\r\nimport NightsStay from \"@material-ui/icons/NightsStay\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectConversation, switchDarkMode } from \"../../actions\";\r\n\r\nclass ContactList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n    };\r\n  }\r\n  selectConversation = (conversation) => {\r\n    this.props.selectConversation(conversation);\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n  matchesSearch = (item) => {\r\n    const { search } = this.state;\r\n    if (search == \"\") return true;\r\n    const reg = new RegExp(\"(\" + search.toLowerCase() + \")+\");\r\n    return reg.test(item.name.toLowerCase()) ? true : false;\r\n  };\r\n  render() {\r\n    return (\r\n      <Card\r\n        elevation={10}\r\n        style={{\r\n          width: \"25%\",\r\n          height: \"100%\",\r\n          overflow: \"scroll\",\r\n          scrollbarColor: this.props.Dark_Mode\r\n            ? \"rgb(80, 99, 107)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n          scrollbarWidth: \"thin\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? \"rgba(10, 15, 15,0.8)\"\r\n            : \"rgba(84, 177, 210,0.8)\",\r\n          overflowX: \"hidden\",\r\n          ...s.scrollBar,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"solid  0.1px\",\r\n            borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"7vh\",\r\n                height: \"7vh\",\r\n                maxHeight: 50,\r\n                maxWidth: 50,\r\n                borderRadius: \"50%\",\r\n                margin: 10,\r\n              }}\r\n              src={this.props.user.image}\r\n            />\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"flex-end\",\r\n                display: \"flex\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <div onClick={this.props.switchDarkMode}>\r\n                {!this.props.Dark_Mode ? (\r\n                  <WbSunny\r\n                    style={{\r\n                      color: this.props.Dark_Mode ? \"grey\" : \"white\",\r\n                      fontSize: 30,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <NightsStay\r\n                    style={{\r\n                      color: this.props.Dark_Mode ? \"grey\" : \"white\",\r\n                      fontSize: 30,\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Card\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                height: \"2vh\",\r\n                borderRadius: 10,\r\n                width: \"80%\",\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n                borderColor: this.props.Dark_Mode\r\n                  ? \"grey\"\r\n                  : \"rgb(84, 177, 210)\",\r\n                display: \"flex\",\r\n                alignItems: \"centers\",\r\n              },\r\n            ])}\r\n          >\r\n            <input\r\n              id=\"input\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                height: \"2vh\",\r\n                width: \"100%\",\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                fontSize: \"2.5vh\",\r\n                outline: \"none\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n        </div>\r\n        {this.props.list &&\r\n          this.props.list.map((item) => {\r\n            if (!this.matchesSearch(item)) return null;\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  borderBottom: \"solid  0.1px\",\r\n                  borderColor: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                }}\r\n                onClick={() => {\r\n                  this.selectConversation(item);\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    width: \"75%\",\r\n                    height: \"75%\",\r\n                    maxHeight: 75,\r\n                    maxWidth: 75,\r\n                    borderRadius: \"50%\",\r\n                    margin: 10,\r\n                  }}\r\n                  src={item.image}\r\n                />\r\n                <div\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    textOverflow: \"ellipsis\",\r\n                    padding: 10,\r\n                    justifyContent: \"center\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      color: \"rgb(230, 230, 230)\",\r\n                      fontSize: \"2.2vh\",\r\n                      marginBottom: 10,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      color: s.text_color,\r\n                      width: \"100%\",\r\n                      overflow: \"hidden\",\r\n                      textOverflow: \"ellipsis\",\r\n                      fontSize: \"2vh\",\r\n                    }}\r\n                  >\r\n                    {item.lastMessage}\r\n                  </div>\r\n                </div>\r\n                {item.unreadMessages.length > 0 && (\r\n                  <div\r\n                    style={{\r\n                      alignSelf: \"flex-end\",\r\n                      margin: 10,\r\n                      marginLeft: \"auto\",\r\n                      color: \"white\",\r\n                      backgroundColor: this.props.Dark_Mode\r\n                        ? \"rgb(65, 65, 65)\"\r\n                        : \"rgba(84, 177, 210)\",\r\n                      padding: 5,\r\n                      borderRadius: 1000,\r\n                      height: 20,\r\n                      width: 20,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {item.unreadMessages.length}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    list: store.reducer.contacts,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n    user: store.reducer.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectConversation, switchDarkMode })(\r\n  ContactList\r\n);\r\n","export const selectConversation = (item) => (dispatch) => {\r\n  console.log(item);\r\n  dispatch({\r\n    type: \"SELECT_CONVERSATION\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const addMessage = (item) => (dispatch) => {\r\n  console.log(\"New Message\", item);\r\n  dispatch({\r\n    type: \"ADD_MESSAGE\",\r\n    payload: item,\r\n  });\r\n};\r\nexport const switchDarkMode = () => (dispatch) => {\r\n  console.log(\"Switching Theme\");\r\n  dispatch({\r\n    type: \"SWITCH_DARK_MODE\",\r\n  });\r\n};\r\n","export const Color_Theme = \"rgba(29, 34, 38,0.8)\";\r\nexport const Button_Color = \"rgb(148, 149, 154)\";\r\n","import React, { Component } from \"react\";\r\nimport Call from \"@material-ui/icons/Call\";\r\nimport styles, { combineStyles } from \"../../../constants/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport faker from \"faker\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Card\r\n        elevation={10}\r\n        style={{\r\n          height: \"12%\",\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n          borderRadius: 0,\r\n          ...styles.bb1,\r\n          borderColor: \"grey\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"10%\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              width: \"7vh\",\r\n              height: \"7vh\",\r\n              borderRadius: \"90%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n            src={this.props.image}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            marginLeft: 10,\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontSize: \"2.5vh\",\r\n              fontWeight: \"bold\",\r\n              color: this.props.Dark_Mode\r\n                ? styles.text_color\r\n                : \"rgb(60, 80, 90)\",\r\n            }}\r\n          >\r\n            {this.props.name}\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: \"2vh\",\r\n              color: this.props.Dark_Mode ? styles.text_color : \"#61b7d5\",\r\n            }}\r\n          >\r\n            {this.props.isOnline\r\n              ? \"Online\"\r\n              : \"Last seen at \" + faker.date.past().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              styles.m2,\r\n            ])}\r\n          >\r\n            <Call\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 25,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    name: store.reducer.selectedConversation.name,\r\n    isOnline: store.reducer.selectedConversation.isOnline,\r\n    image: store.reducer.selectedConversation.image,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Header);\r\n","import React, { Component } from \"react\";\r\nimport s, { combineStyles } from \"../../../constants/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\n\r\nclass MessageList extends Component {\r\n  updateScroll = () => {\r\n    var element = document.getElementById(\"messageList\");\r\n    element.scrollTop = element.scrollHeight;\r\n  };\r\n  componentDidMount() {\r\n    this.updateScroll();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateScroll();\r\n  }\r\n  isImage = (msg) => {\r\n    console.log(\"msg\", msg);\r\n    if (msg.length < 3) return false;\r\n    if (msg.slice(msg.length - 3) == \"jpg\") return true;\r\n    else return false;\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"messageList\"\r\n        style={{\r\n          flex: 1,\r\n          overflowY: \"scroll\",\r\n          scrollbarColor: \"grey\",\r\n          scrollbarWidth: \"thin\",\r\n          backgroundColor: this.props.Dark_Mode\r\n            ? Color_Theme\r\n            : \"rgba(233, 242, 246,0.9)\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {this.props.messages.map((item) => {\r\n          return (\r\n            <div\r\n              style={combineStyles([\r\n                s.m2,\r\n                { display: \"flex\", flexDirection: \"column\" },\r\n              ])}\r\n            >\r\n              <Paper\r\n                elevation={1}\r\n                style={combineStyles([\r\n                  {\r\n                    alignSelf:\r\n                      item.sender == this.props.user.name\r\n                        ? \"flex-end\"\r\n                        : \"flex-start\",\r\n                    borderRadius: 10,\r\n                    borderTopLeftRadius:\r\n                      item.sender == this.props.user.name ? 10 : 0,\r\n                    borderTopRightRadius:\r\n                      item.sender == this.props.user.name ? 0 : 10,\r\n                    fontSize: \"2.3vh\",\r\n                    color:\r\n                      item.sender != this.props.user.name\r\n                        ? this.props.Dark_Mode\r\n                          ? \"rgb(230, 230, 230)\"\r\n                          : \"rgb(120, 140, 160)\"\r\n                        : this.props.Dark_Mode\r\n                        ? \"rgb(144, 144, 146)\"\r\n                        : \"#ffffff\",\r\n                    backgroundColor:\r\n                      item.sender != this.props.user.name\r\n                        ? this.props.Dark_Mode\r\n                          ? \"rgb(65, 65, 65,0.6)\"\r\n                          : \"#ffffff\"\r\n                        : this.props.Dark_Mode\r\n                        ? \"rgba(34, 34, 34,0.6)\"\r\n                        : \"rgb(97, 183, 213)\",\r\n                  },\r\n                  s.b0,\r\n                  s.p2,\r\n                ])}\r\n              >\r\n                {this.isImage(item.message) ? (\r\n                  <img\r\n                    src={item.message}\r\n                    style={{ height: \"20vh\", width: \"20vw\" }}\r\n                  />\r\n                ) : (\r\n                  item.message\r\n                )}\r\n              </Paper>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  console.log(\"messages\", store.reducer.selectedConversation);\r\n  return {\r\n    user: store.reducer.user,\r\n    messages: store.reducer.selectedConversation.messages,\r\n\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {})(MessageList);\r\n","import React, { Component } from \"react\";\r\nimport s, { combineStyles } from \"../../../constants/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport { Color_Theme } from \"../../../constants/colors\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../../actions\";\r\nimport { image } from \"faker\";\r\nclass MessageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      openGallery: false,\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ message: e.target.value });\r\n  };\r\n  handleSend = (msg) => {\r\n    console.log(this.state.message);\r\n    //send message\r\n    this.props.addMessage({\r\n      message: typeof msg != \"object\" ? msg : this.state.message,\r\n      sender: this.props.user.name,\r\n      timeStamp: Date.now(),\r\n    });\r\n    this.clearInput();\r\n  };\r\n  clearInput = () => {\r\n    this.setState({ message: \"\" });\r\n    document.getElementById(\"message\").value = \"\";\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selected.name != prevProps.selected.name) {\r\n      this.clearInput();\r\n    }\r\n  }\r\n  getImages = () => {\r\n    let images = [];\r\n    for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n      const im = image.avatar();\r\n      images.push(\r\n        <img\r\n          onClick={() => {\r\n            this.handleSend(im);\r\n            this.setState({ openGallery: !this.state.openGallery });\r\n          }}\r\n          src={im}\r\n          style={{ flex: 1, height: \"10vh\", minWidth: 100 }}\r\n        />\r\n      );\r\n    }\r\n    return images;\r\n  };\r\n  render() {\r\n    const { openGallery } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          height: openGallery ? \"30vh\" : null,\r\n          width: \"100%\",\r\n          overflowY: openGallery ? \"scroll\" : \"hidden\",\r\n\r\n          scrollbarColor: \"grey\",\r\n          scrollbarWidth: \"thin\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: this.props.Dark_Mode\r\n              ? Color_Theme\r\n              : \"rgba(233, 242, 246,0.9)\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {/*<div\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <InsertEmoticon\r\n              //fontSize=\"large\"\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>*/}\r\n          <Card\r\n            style={combineStyles([\r\n              s.b1,\r\n              s.m2,\r\n              s.p2,\r\n              {\r\n                borderRadius: 10,\r\n                width: \"80%\",\r\n                flex: 1,\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"rgba(59, 59, 61,0.4)\"\r\n                  : \"#ffffff\",\r\n                borderColor: \"grey\",\r\n              },\r\n            ])}\r\n          >\r\n            <textarea\r\n              id=\"message\"\r\n              onChange={this.handleInput}\r\n              style={{\r\n                height: \"3vh\",\r\n                width: \"100%\",\r\n                color: this.props.Dark_Mode\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgb(80, 99, 107)\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"solid black 0px\",\r\n                outline: \"none\",\r\n                fontSize: \"2.5vh\",\r\n              }}\r\n              multiline={true}\r\n            />\r\n          </Card>\r\n\r\n          <div\r\n            onClick={() => {\r\n              this.setState({ openGallery: !this.state.openGallery });\r\n            }}\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <AttachFile\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n          <div\r\n            onClick={this.handleSend}\r\n            style={combineStyles([\r\n              {\r\n                backgroundColor: this.props.Dark_Mode\r\n                  ? \"transparent\"\r\n                  : \"#61b7d5\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderRadius: 100,\r\n                padding: 5,\r\n              },\r\n\r\n              s.m2,\r\n            ])}\r\n          >\r\n            <Send\r\n              style={combineStyles([\r\n                {\r\n                  color: this.props.Dark_Mode ? \"grey\" : \"#ffffff\",\r\n                  fontSize: 30,\r\n                },\r\n              ])}\r\n            />\r\n          </div>\r\n        </div>\r\n        {openGallery && (\r\n          <div\r\n            id=\"messageList\"\r\n            style={{\r\n              height: \"100%\",\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              backgroundColor: this.props.Dark_Mode\r\n                ? Color_Theme\r\n                : \"rgba(233, 242, 246,0.9)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {this.getImages()}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    user: store.reducer.user,\r\n    selected: store.reducer.selectedConversation,\r\n    Dark_Mode: store.reducer.Dark_Mode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addMessage })(MessageInput);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport MessageList from \"./MessageList\";\r\nimport MessageInput from \"./MessageInput\";\r\n\r\nexport default class ChatList extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Header />\r\n        <MessageList />\r\n        <MessageInput />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ContactList from \"./components/ContactList\";\nimport Chat from \"./components/Chat\";\nimport s from \"./constants/styles\";\nimport faker from \"faker\";\nimport { Card } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        ...s.m0,\n        scrollbarColor: \"grey\",\n        scrollbarWidth: \"thin\",\n        overflowY: \"scroll\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        //overflowX: \"hidden\",\n        //border: \"solid black 1px\",\n      }}\n    >\n      <img\n        src={require(\"./images/background.jfif\")}\n        style={{\n          position: \"absolute\",\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      />\n      <Card\n        elevation={12}\n        style={{\n          zIndex: 1,\n          height: \"75%\",\n          width: \"75%\",\n          flexDirection: \"row\",\n          display: \"flex\",\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <ContactList\n          list={[\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n            { name: faker.name.findName() },\n          ]}\n        />\n        <Chat />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import faker from \"faker\";\r\nimport { combineReducers } from \"redux\";\r\nconst user = { image: faker.image.avatar(), name: faker.name.findName() };\r\nconst createChat = (contact) => {\r\n  let messages = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    messages.push({\r\n      message: faker.lorem.words(),\r\n      sender: Math.floor(Math.random() * 2) ? contact : user.name,\r\n      timeStamp: Date.parse(faker.date.past()),\r\n    });\r\n  }\r\n  return messages;\r\n};\r\nconst createContacts = () => {\r\n  let contacts = [];\r\n  for (var i = 0; i < Math.floor(Math.random() * 100); i++) {\r\n    const name = faker.name.findName();\r\n    const messages = createChat(name);\r\n    contacts.push({\r\n      name,\r\n      image: faker.image.avatar(),\r\n      lastMessage: faker.lorem.words(),\r\n      messages,\r\n      unreadMessages: messages.slice(\r\n        Math.floor(Math.random() * messages.length)\r\n      ),\r\n      isOnline: Math.floor(Math.random() * 2),\r\n    });\r\n  }\r\n  console.log(\"contacts\", contacts);\r\n  return contacts;\r\n};\r\n\r\nlet contacts = createContacts();\r\ncontacts[0].unreadMessages = [];\r\nconst initialState = {\r\n  contacts,\r\n  selectedConversation: contacts[0],\r\n  user,\r\n  Dark_Mode: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: action.payload,\r\n        contacts: state.contacts.map((item) => {\r\n          if (action.payload.name == item.name) {\r\n            return {\r\n              ...item,\r\n              unreadMessages: [],\r\n            };\r\n          } else if (state.selectedConversation.name == item.name) {\r\n            return { ...state.selectedConversation, unreadMessages: [] };\r\n          } else {\r\n            return item;\r\n          }\r\n        }),\r\n      };\r\n      break;\r\n    case \"ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        selectedConversation: {\r\n          ...state.selectedConversation,\r\n          messages: [...state.selectedConversation.messages, action.payload],\r\n        },\r\n      };\r\n      break;\r\n    case \"SWITCH_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        Dark_Mode: !state.Dark_Mode,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({ reducer });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}